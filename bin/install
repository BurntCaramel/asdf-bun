#!/usr/bin/env bash

set -Eeuo pipefail

trap cleanup SIGINT SIGTERM ERR

cleanup() {
  trap - SIGINT SIGTERM ERR
  rm -rf "$ASDF_INSTALL_PATH"
  echo
  echo -e "Cleanup: Something went wrong!"
  echo
  echo "$(caller): ${BASH_COMMAND}"
}

fail() {
  echo -e "Fail: $*"
  exit 1
}

# Reset
Color_Off=''

# Regular Colors
Red=''
Green=''

# Bold
BWhite=''
BGreen=''

Dim='' # White

if test -t 1; then
    # Reset
    Color_Off='\033[0m' # Text Reset

    # Regular Colors
    Red='\033[0;31m'   # Red
    Green='\033[0;32m' # Green
    White='\033[0;37m' # White

    Dim='\033[0;2m' # White

    # Bold
    BGreen='\033[1;32m' # Green
    BWhite='\033[1;37m' # White
fi

install_bun() {
  local install_type=$1
  local version=$2
  local install_path=$3

  if ! command -v unzip >/dev/null; then
    echo -e "${Red}error${Color_Off}: unzip is required to install Bun (see: https://github.com/Jarred-Sumner/bun#unzip-is-required)." 1>&2
    exit 1
  fi

  if [ "$install_type" != "version" ]; then
    fail "asdf-bun supports release installs only"
  fi

  local target

  if [ "$OS" = "Windows_NT" ]; then
    echo "error: Please install Bun using Windows Subsystem for Linux."
    exit 1
  else
      case $(uname -sm) in
      "Darwin x86_64") target="darwin-x64" ;;
      "Darwin arm64") target="darwin-aarch64" ;;
      *) target="linux-x64" ;;
      esac
  fi

  if [ "$target" = "darwin-x64" ]; then
    # Is it rosetta
    sysctl sysctl.proc_translated >/dev/null 2>&1
    if [ $? -eq 0 ]; then
        target="darwin-aarch64"
        echo -e "$Dim Your shell is running in Rosetta 2. Downloading Bun for $target instead. $Color_Off"
    fi
  fi

  local uncompress_command
  local archive_file

  archive_file="deno-${target}.zip"
  uncompress_command="unzip -d ${install_path}/bin"

  local download_url="https://github.com/Jarred-Sumner/bun/releases/download/v${version}/${archive_file}"
  local source_path="${install_path}/bin/bun.${archive_format}"

  echo "* Downloading and installing bun..."
  curl --fail --silent --location --create-dirs --output "$source_path" "$download_url"
  $uncompress_command "$source_path"
  chmod +x "${install_path}/bin/bun"
  mkdir "${install_path}/.bun"
  rm "$source_path"
  echo "The installation was successful!"
}

install_bun "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
